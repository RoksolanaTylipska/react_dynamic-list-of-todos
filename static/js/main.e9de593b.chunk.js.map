{"version":3,"sources":["api.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","TodoList","todos","selectedTodo","handleTodo","className","map","todo","cn","id","completed","title","type","onClick","TodoFilter","handleStatus","handleQuery","clearQuery","query","onChange","event","target","value","placeholder","style","pointerEvents","Loader","TodoModal","onClear","useState","user","setUser","isLoading","setIsLoading","userId","useEffect","getUser","userFromServer","href","email","name","App","setTodos","setSelectedTodo","status","setStatus","setQuery","todosFromServer","finally","useCallback","selectedStatus","search","visibleTodos","todoStatus","filter","toLowerCase","includes","filterTodos","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e9de593b.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[]\n  selectedTodo: Todo | null\n  handleTodo: (todo: Todo) => void\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  handleTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <tr\n          data-cy=\"todo\"\n          className={cn({\n            'has-background-info-light': selectedTodo === todo,\n          })}\n          key={todo.id}\n        >\n          <td className=\"is-vcentered\">{todo.id}</td>\n          <td className=\"is-vcentered\">\n            {todo.completed\n              && (\n                <span className=\"icon\" data-cy=\"iconCompleted\">\n                  <i className=\"fas fa-check\" />\n                </span>\n              )}\n          </td>\n          <td className=\"is-vcentered is-expanded\">\n            <p className={cn({\n              'has-text-danger': !todo.completed,\n              'has-text-success': todo.completed,\n            })}\n            >\n              {todo.title}\n            </p>\n          </td>\n          <td className=\"has-text-right is-vcentered\">\n            <button\n              data-cy=\"selectButton\"\n              className=\"button\"\n              type=\"button\"\n              onClick={() => {\n                handleTodo(todo);\n              }}\n            >\n              <span className=\"icon\">\n                <i className={cn('far', { 'fa-eye': selectedTodo !== todo }, {\n                  'fa-eye-slash': selectedTodo === todo,\n                })}\n                />\n              </span>\n            </button>\n          </td>\n        </tr>\n      ))}\n\n    </tbody>\n  </table>\n);\n","type Props = {\n  handleStatus: (status: string) => void\n  handleQuery: (title: string) => void\n  query: string\n  clearQuery: () => void\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  handleStatus,\n  handleQuery,\n  clearQuery,\n  query,\n}) => {\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={(event) => handleStatus(event.target.value)}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={(event) => handleQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            // eslint-disable-next-line jsx-a11y/control-has-associated-label\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={clearQuery}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo\n  onClear: () => void\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, onClear }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const { userId } = todo;\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    if (!userId) {\n      return;\n    }\n\n    getUser(userId)\n      .then(userFromServer => {\n        setUser(userFromServer);\n        setIsLoading(false);\n      });\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onClear()}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {todo.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState, useCallback } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { getTodos } from './api';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\n// import { event } from 'cypress/types/jquery';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [status, setStatus] = useState('');\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getTodos()\n      .then(todosFromServer => {\n        setTodos(todosFromServer);\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  const handleStatus = useCallback((selectedStatus: string) => {\n    setStatus(selectedStatus);\n  }, []);\n\n  const handleQuery = useCallback((search: string) => {\n    setQuery(search);\n  }, []);\n\n  const handleTodo = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  const clearSelectedTodo = () => {\n    setSelectedTodo(null);\n  };\n\n  const filterTodos = useCallback((search: string, todoStatus: string) => {\n    if (todoStatus === 'completed') {\n      return todos.filter(todo => (\n        todo.completed && todo.title.toLowerCase().includes(search.toLowerCase())\n      ));\n    }\n\n    if (todoStatus === 'active') {\n      return todos.filter(todo => (\n        !todo.completed && todo.title.toLowerCase().includes(search.toLowerCase())\n      ));\n    }\n\n    return todos.filter(todo => (\n      todo.title.toLowerCase().includes(search.toLowerCase())));\n  }, [query, status, todos]);\n\n  const visibleTodos = filterTodos(query, status);\n\n  const clearQuery = () => {\n    setQuery('');\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                handleStatus={handleStatus}\n                handleQuery={handleQuery}\n                clearQuery={clearQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!isLoading\n                ? (\n                  <TodoList\n                    todos={visibleTodos}\n                    selectedTodo={selectedTodo}\n                    handleTodo={handleTodo}\n                  />\n                )\n                : (<Loader />)}\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo !== null && (\n        <TodoModal\n          todo={selectedTodo}\n          onClear={clearSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}
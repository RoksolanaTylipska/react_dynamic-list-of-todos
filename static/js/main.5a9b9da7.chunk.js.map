{"version":3,"sources":["api.ts","helpers.tsx","TodoItem/TodoItem.tsx","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","StatusFilter","TodoItem","todo","selectedTodo","handleTodo","className","cn","id","completed","title","type","onClick","TodoList","todos","map","TodoFilter","handleStatus","handleQuery","clearQuery","query","onChange","event","target","value","ALL","ACTIVE","COMPLETED","placeholder","style","pointerEvents","Loader","TodoModal","onClear","useState","user","setUser","isLoading","setIsLoading","userId","useEffect","getUser","userFromServer","catch","error","Error","href","email","name","App","setTodos","setSelectedTodo","status","setStatus","setQuery","todosFromServer","finally","useCallback","selectedStatus","search","visibleTodos","filter","normalizedTodo","toLowerCase","trim","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5a9b9da7.chunk.js","sourcesContent":["import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\n// This function creates a promise\n// that is resolved after a given delay\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  // we add some delay to see how the loader works\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","export enum StatusFilter {\n  ALL = 'all',\n  ACTIVE = 'active',\n  COMPLETED = 'completed',\n}\n","import React from 'react';\nimport cn from 'classnames';\nimport { Todo } from '../types/Todo';\n\ntype Props = {\n  todo: Todo,\n  selectedTodo: Todo | null,\n  handleTodo: (todo: Todo) => void\n};\n\nexport const TodoItem: React.FC<Props> = ({\n  todo,\n  selectedTodo,\n  handleTodo,\n}) => {\n  return (\n    <tr\n      data-cy=\"todo\"\n      className={cn({\n        'has-background-info-light': selectedTodo === todo,\n      })}\n      key={todo.id}\n    >\n      <td className=\"is-vcentered\">{todo.id}</td>\n      <td className=\"is-vcentered\">\n        {todo.completed && (\n          <span className=\"icon\" data-cy=\"iconCompleted\">\n            <i className=\"fas fa-check\" />\n          </span>\n        )}\n      </td>\n      <td className=\"is-vcentered is-expanded\">\n        <p className={cn({\n          'has-text-danger': !todo.completed,\n          'has-text-success': todo.completed,\n        })}\n        >\n          {todo.title}\n        </p>\n      </td>\n      <td className=\"has-text-right is-vcentered\">\n        <button\n          data-cy=\"selectButton\"\n          className=\"button\"\n          type=\"button\"\n          onClick={() => {\n            handleTodo(todo);\n          }}\n        >\n          <span className=\"icon\">\n            <i className={cn('far', { 'fa-eye': selectedTodo !== todo }, {\n              'fa-eye-slash': selectedTodo === todo,\n            })}\n            />\n          </span>\n        </button>\n      </td>\n    </tr>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoItem } from '../../TodoItem/TodoItem';\n\ntype Props = {\n  todos: Todo[]\n  selectedTodo: Todo | null\n  handleTodo: (todo: Todo) => void\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  selectedTodo,\n  handleTodo,\n}) => (\n  <table className=\"table is-narrow is-fullwidth\">\n    <thead>\n      <tr>\n        <th>#</th>\n        <th>\n          <span className=\"icon\">\n            <i className=\"fas fa-check\" />\n          </span>\n        </th>\n        <th>Title</th>\n        <th> </th>\n      </tr>\n    </thead>\n\n    <tbody>\n      {todos.map(todo => (\n        <TodoItem\n          key={todo.id}\n          todo={todo}\n          selectedTodo={selectedTodo}\n          handleTodo={handleTodo}\n        />\n      ))}\n\n    </tbody>\n  </table>\n);\n","import { ChangeEvent } from 'react';\nimport { StatusFilter } from '../../helpers';\n\ntype Props = {\n  handleStatus: (StatusFilter: StatusFilter) => void\n  handleQuery: (title: string) => void\n  query: string\n  clearQuery: () => void\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  handleStatus,\n  handleQuery,\n  clearQuery,\n  query,\n}) => {\n  const handleSelectStatus = (event: ChangeEvent<HTMLSelectElement>) => {\n    handleStatus(event.target.value as StatusFilter);\n  };\n\n  const handleSearchQuery = (event: ChangeEvent<HTMLInputElement>) => {\n    handleQuery(event.target.value);\n  };\n\n  return (\n    <form className=\"field has-addons\">\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            onChange={handleSelectStatus}\n          >\n            <option value={StatusFilter.ALL}>All</option>\n            <option value={StatusFilter.ACTIVE}>Active</option>\n            <option value={StatusFilter.COMPLETED}>Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={handleSearchQuery}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            <button\n              data-cy=\"clearSearchButton\"\n              aria-label=\"Ð¡lear Search Button \"\n              type=\"button\"\n              className=\"delete\"\n              onClick={clearQuery}\n            />\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useState, useEffect } from 'react';\nimport { Loader } from '../Loader';\nimport { getUser } from '../../api';\nimport { User } from '../../types/User';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todo: Todo\n  onClear: () => void\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, onClear }) => {\n  const [user, setUser] = useState<User | null>(null);\n  const [isLoading, setIsLoading] = useState(true);\n\n  const { userId } = todo;\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getUser(userId)\n      .then(userFromServer => {\n        setUser(userFromServer);\n        setIsLoading(false);\n      })\n      .catch(error => new Error(`Error - user by userId: ${userId} was not found:, ${error}`));\n  }, []);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${todo.id}`}\n            </div>\n\n            <button\n              type=\"button\"\n              aria-label=\"Delete Button \"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={() => onClear()}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {todo.title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {/* <strong className=\"has-text-success\">Done</strong> */}\n              {todo.completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong>}\n\n              {' by '}\n\n              <a href={`mailto:${user?.email}`}>\n                {user?.name}\n              </a>\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState, useCallback } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\nimport { getTodos } from './api';\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Todo } from './types/Todo';\nimport { StatusFilter } from './helpers';\n\nexport const App: React.FC = () => {\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [selectedTodo, setSelectedTodo] = useState<Todo | null>(null);\n  const [status, setStatus] = useState(StatusFilter.ALL);\n  const [query, setQuery] = useState('');\n\n  useEffect(() => {\n    setIsLoading(true);\n\n    getTodos()\n      .then(todosFromServer => {\n        setTodos(todosFromServer);\n      })\n      .finally(() => setIsLoading(false))\n      .catch(error => new Error(`Error - todos was not loaded:', ${error}`));\n  }, []);\n\n  const handleStatus = useCallback((selectedStatus: StatusFilter) => {\n    setStatus(selectedStatus);\n  }, []);\n\n  const handleQuery = useCallback((search: string) => {\n    setQuery(search);\n  }, []);\n\n  const handleTodo = (todo: Todo) => {\n    setSelectedTodo(todo);\n  };\n\n  const clearSelectedTodo = () => {\n    setSelectedTodo(null);\n  };\n\n  const visibleTodos = todos.filter(todo => {\n    const normalizedTodo\n    = todo.title.toLowerCase().trim().includes(query.toLowerCase());\n\n    switch (status) {\n      case StatusFilter.ALL:\n        return normalizedTodo;\n      case StatusFilter.ACTIVE:\n        return normalizedTodo && !todo.completed;\n      case StatusFilter.COMPLETED:\n        return normalizedTodo && todo.completed;\n      default:\n        throw new Error('Unknown status selector');\n    }\n  });\n\n  const clearQuery = () => {\n    setQuery('');\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                query={query}\n                handleStatus={handleStatus}\n                handleQuery={handleQuery}\n                clearQuery={clearQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {!isLoading ? (\n                <TodoList\n                  todos={visibleTodos}\n                  selectedTodo={selectedTodo}\n                  handleTodo={handleTodo}\n                />\n              ) : (\n                <Loader />\n              )}\n\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {selectedTodo && (\n        <TodoModal\n          todo={selectedTodo}\n          onClear={clearSelectedTodo}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}